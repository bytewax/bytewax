[project]
name = "bytewax"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: System :: Distributed Computing",
]
dynamic = ["version"]

dependencies = [
    "typing_extensions>=4",
    "prometheus-client>=0.18"
]

extras = [
    "kafka",
]

[project.optional-dependencies]
kafka = [
    "requests>=2.0",
    "fastavro>=1.8",
    "confluent-kafka>=2.0.2",
]

[project.urls]
"Source Code" = "https://github.com/bytewax/bytewax"
Issues = "https://github.com/bytewax/bytewax/issues"
Documentation = "https://docs.bytewax.io/"
Changelog = "https://github.com/bytewax/bytewax/blob/main/CHANGELOG.md"

[metadata]
long_description = "file: README.md"
long_description_content_type = "text/markdown"

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[tool.maturin]
module-name = "bytewax._bytewax"
python-source = "pysrc"

[tool.pytest.ini_options]
addopts = "-v"

[tool.mypy]
# TODO: Turn this on to typecheck all tests.
# check_untyped_defs = true
# TODO: Also consider
# disallow_untyped_calls = true

# TODO: See if we can get
# https://github.com/benbenbang/types-confluent-kafka fixed up to work
# here.
[[tool.mypy.overrides]]
module = "confluent_kafka.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonpickle.*"
ignore_missing_imports = true

[tool.ruff.lint]
select = [
    "A",
    "B",
    "D",
    "DTZ",
    "E",
    "EM",
    "F",
    "I",
    "PL",
    "W",
]
ignore = [
    "D105",
    "E731",
    "PLR",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"examples/*.py" = ["D"]
"pytests/test_flows/*.py" = ["D"]
"test_*.py" = ["D"]
# Because it has huge literals in it.
"pytests/test_visualize.py" = ["E501"]
