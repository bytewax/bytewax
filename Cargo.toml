[package]
name = "bytewax"
version = "0.15.1"
edition = "2021"

[lib]
name = "bytewax"
crate-type = ["cdylib", "rlib"]

[package.metadata.maturin]
python-source = "pysrc"

[dependencies]
axum = { version = "0.5.17" }
bincode = { version = "1.3.3" }
chrono = { version = "0.4", features = [ "serde" ] }
futures = { version = "0.3.21" }
pyo3 = { version = "0.17.2", features = ["macros", "chrono"] }
scopeguard = { version = "1.1.0" }
send_wrapper = { version = "0.6.0" }
serde = { version = "1.0.134" }
serde_test = { version = "1.0.134" }
sqlx = { version = "0.6.1", features = [ "runtime-tokio-rustls", "postgres", "sqlite", "chrono" ] }
timely = { version = "0.12.0", features = [ "bincode" ] }
tokio = { version = "1.20.1", features = [ "full" ] }
tracing = "0.1"
opentelemetry = { version = "0.18", features = ["rt-tokio"] }
opentelemetry-jaeger = { version = "0.17", features = ["rt-tokio"] }
opentelemetry-otlp = { version = "0.11", features = ["trace", "reqwest-client", "grpc-tonic"] }
tracing-opentelemetry = "0.18"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# For macos, use vendored gssapi
[target.'cfg(target_os = "macos")'.dependencies]
rdkafka = { version = "0.28.0", features = [ "cmake-build", "gssapi-vendored", "ssl-vendored" ] }

# For aarch64
[target.'cfg(all(target_os = "linux", target_arch = "aarch64"))'.dependencies]
rdkafka = { version = "0.28.0", features = [ "cmake-build", "ssl-vendored" ] }

# For x86 linux
[target.'cfg(all(target_os = "linux", target_arch = "x86_64"))'.dependencies]
rdkafka = { version = "0.28.0", features = [ "cmake-build", "gssapi", "ssl" ] }

[dev-dependencies]
pyo3 = { version = "0.17.2", default-features = false, features = ["macros", "chrono"] }

[features]
extension-module = ["pyo3/extension-module"]
default = ["extension-module"]
